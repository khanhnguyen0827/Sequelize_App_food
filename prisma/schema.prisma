generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model food_types {
  type_id   Int     @id @default(autoincrement())
  type_name String  @unique(map: "type_name") @db.VarChar(255)
  foods     foods[]
}

model foods {
  food_id       Int             @id @default(autoincrement())
  food_name     String          @db.VarChar(255)
  image         String?         @db.VarChar(255)
  price         Float           @db.Float
  description   String?         @db.VarChar(255)
  type_id       Int?
  res_id        Int?
  food_types    food_types?     @relation(fields: [type_id], references: [type_id], onDelete: NoAction, onUpdate: NoAction, map: "foods_ibfk_1")
  restaurants   restaurants?    @relation(fields: [res_id], references: [res_id], onDelete: NoAction, onUpdate: NoAction, map: "foods_ibfk_2")
  order_details order_details[]

  @@index([res_id], map: "res_id")
  @@index([type_id], map: "type_id")
}

model likes {
  user_id     Int
  res_id      Int
  date_like   DateTime    @db.DateTime(0)
  users       users       @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "likes_ibfk_1")
  restaurants restaurants @relation(fields: [res_id], references: [res_id], onDelete: NoAction, onUpdate: NoAction, map: "likes_ibfk_2")

  @@id([user_id, res_id])
  @@index([res_id], map: "res_id")
}

model order_details {
  order_id Int
  food_id  Int
  quantity Int
  price    Float  @db.Float
  orders   orders @relation(fields: [order_id], references: [order_id], onDelete: NoAction, onUpdate: NoAction, map: "order_details_ibfk_1")
  foods    foods  @relation(fields: [food_id], references: [food_id], onDelete: NoAction, onUpdate: NoAction, map: "order_details_ibfk_2")

  @@id([order_id, food_id])
  @@index([food_id], map: "food_id")
}

model orders {
  order_id      Int             @id @default(autoincrement())
  user_id       Int?
  order_date    DateTime        @db.DateTime(0)
  total_amount  Float           @db.Float
  order_details order_details[]
  users         users?          @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "orders_ibfk_1")

  @@index([user_id], map: "user_id")
}

model ratings {
  user_id     Int
  res_id      Int
  amount      Int
  date_rate   DateTime    @db.DateTime(0)
  users       users       @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "ratings_ibfk_1")
  restaurants restaurants @relation(fields: [res_id], references: [res_id], onDelete: NoAction, onUpdate: NoAction, map: "ratings_ibfk_2")

  @@id([user_id, res_id])
  @@index([res_id], map: "res_id")
}

model restaurants {
  res_id      Int       @id @default(autoincrement())
  res_name    String    @db.VarChar(255)
  image       String?   @db.VarChar(255)
  description String?   @db.VarChar(255)
  foods       foods[]
  likes       likes[]
  ratings     ratings[]
}

model users {
  user_id   Int       @id @default(autoincrement())
  full_name String    @db.VarChar(255)
  email     String    @unique(map: "email") @db.VarChar(255)
  password  String    @db.VarChar(255)
  likes     likes[]
  orders    orders[]
  ratings   ratings[]
}
